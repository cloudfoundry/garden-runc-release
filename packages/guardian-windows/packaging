. ./exiter.ps1

$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

$BOSH_INSTALL_TARGET = Resolve-Path "${env:BOSH_INSTALL_TARGET}"
if ((Get-Item $BOSH_INSTALL_TARGET).LinkType -ne "") {
  $BOSH_INSTALL_TARGET = (Get-Item $BOSH_INSTALL_TARGET).Target
}

# Create GOPATH
New-Item -ItemType "directory" -Force src

robocopy.exe /E "${PWD}" src /xd src
if ($LASTEXITCODE -ge 8) {
    Write-Error "robocopy.exe /E ${PWD} src /xd src"
}

. C:\var\vcap\packages\golang-*-windows\bosh\compile.ps1

Push-Location guardian
go.exe build -buildvcs=false -mod vendor -o "${BOSH_INSTALL_TARGET}\gdn.exe" -ldflags "-X main.version=${gdn_version}" ".\cmd\gdn"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error compiling: cmd\gdn"
}

go.exe build -buildvcs=false -mod vendor -o "${BOSH_INSTALL_TARGET}\winit.exe" ".\cmd\winit"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error compiling: cmd\winit"
}

go.exe build -buildvcs=false -mod vendor -o "${BOSH_INSTALL_TARGET}\healthchecker.exe" ".\vendor\code.cloudfoundry.org\cf-networking-helpers\healthchecker\cmd\healthchecker"
if ($LASTEXITCODE -ne 0) {
    Write-Error "Error compiling: cf-networking-helpers\healthchecker\cmd\healthchecker (vendored package)"
}
Pop-Location

Exit 0
