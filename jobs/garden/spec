---
name: garden

templates:
  bin/bpm-pre-start.erb:                    bin/bpm-pre-start
  bin/garden_ctl:                           bin/garden_ctl
  bin/garden_start.erb:                     bin/garden_start
  bin/garden_stop.erb:                      bin/garden_stop
  bin/envs.erb:                             bin/envs
  config/garden-default:                    config/garden-default
  config/bpm.yml.erb:                       config/bpm.yml
  bin/auplink:                              bin/auplink
  bin/overlay-xfs-setup:                    bin/overlay-xfs-setup
  bin/grootfs-utils.erb:                    bin/grootfs-utils
  config/grootfs_config.yml.erb:            config/grootfs_config.yml
  config/privileged_grootfs_config.yml.erb: config/privileged_grootfs_config.yml
  config/config.ini.erb:                    config/config.ini
  config/garden.service:                    config/garden.service
  certs/remote-layer.crt.erb:               certs/remote-layer.crt
  certs/remote-layer.cert.erb:              certs/remote-layer.cert
  certs/remote-layer.key.erb:               certs/remote-layer.key
  config/containerd.toml.erb:               config/containerd.toml
  bin/containerd_utils.erb:                 bin/containerd_utils
  bin/pre-start:                            bin/pre-start
  bin/post-start:                           bin/post-start

packages:
  - guardian
  - iptables
  - containerd
  - runc
  - busybox
  - tar
  - garden-idmapper
  - greenskeeper
  - grootfs
  - xfs-progs
  - thresholder
  - dontpanic
  - tini

provides:
- name: iptables
  type: iptables
  properties:
  - garden.iptables_bin_dir

properties:
  garden.listen_network:
    description: "Garden server connection mode (tcp or unix)."
    default: unix

  garden.listen_address:
    description: "Garden server listening address."
    default: /var/vcap/data/garden/garden.sock

  garden.network_mtu:
    description: "Maximum network transmission unit length in bytes. Defaults to the mtu of the interface that the host uses for outbound connections. Max allowed value is 1500. Changed value applies only to newly created containers."
    default: 0

  garden.deny_networks:
    description: "List of CIDR blocks to which containers will be denied access."
    default: []

  garden.allow_host_access:
    description: "A boolean stating whether or not containers started on this host should be able to reach this host. Changing the value on an existing deployment requires a recreate"
    default: false

  garden.docker_registry_endpoint:
    description: "An URL pointing to the Docker registry to use to fetch Docker images. If unset, this will default to the Docker default."

  garden.log_level:
    description: "log level for the Garden server - can be debug, info, error or fatal"
    default: info

  garden.debug_listen_address:
    description: "tcp address on which to serve debug info"

  garden.default_container_grace_time:
    description: "duration after which to reap idle containers"
    default: 0

  garden.default_container_blockio_weight:
    description: "default blkio.weight value for containers. Valid values are 0 (use system default), or 10 - 1000."
    default: 0

  garden.default_container_rootfs:
    description: "path to the rootfs to use when a container specifies no rootfs"
    default: /var/vcap/packages/busybox/busybox-1.36.1.tar

  garden.graph_cleanup_threshold_in_mb:
    description: "DEPRECATED in favour of grootfs.reserved_space_for_other_jobs_in_mb."
    default: -1

  garden.port_pool.start:
    description: "An integer port number used to denote where ports should start being allocated for Net In calls. Uses the Garden default if not set."

  garden.port_pool.size:
    description: "An integer used to denote how many ports are avaliable for Net In calls. Uses the Garden default if not set."

  garden.dropsonde.origin:
    description: "A string identifier that will be used when reporting metrics to Dropsonde."

  garden.dropsonde.destination:
    description: "A URL that points at the Metron agent to which metrics are forwarded. By default, it matches with the default of Metron."

  garden.dns_servers:
    description: "Override DNS servers to be used in containers; defaults to the same as the host"
    default: []

  garden.additional_dns_servers:
    description: "Additional DNS servers to be used in containers; extends those used on the host or those set by dns_servers property"
    default: []

  garden.additional_host_entries:
    description: "Additional hosts file entries to be used in containers."
    default: []

  garden.enable_container_network_metrics:
    description: "Enable container network metrics. This feature is only available on Linux."
    default: false

  garden.insecure_docker_registry_list:
    description: "DEPRECATED in favour of grootfs property."
    default: []

  garden.runtime_plugin:
    description: "Path to a runtime plugin binary"
    default: /var/vcap/packages/runc/bin/runc

  garden.read_header_timeout:
    description: "The amount of time allowed to read request headers"
    default: 30s

  garden.no_image_plugin:
    description: "If true, disables image plugin usage, thus ignoring other image plugin settings"
    default: false

  garden.image_plugin:
    description: "Path to an optional image plugin binary"

  garden.image_plugin_extra_args:
    description: "An array of additional arguments which will be passed to the image plugin binary"
    default: []

  garden.privileged_image_plugin:
    description: "Path to an optional privileged image plugin binary"

  garden.privileged_image_plugin_extra_args:
    description: "An array of additional arguments which will be passed to the privileged image plugin binary when creating privileged containers - these will be passed instead of the contents of image_plugin_extra_args"
    default: []

  garden.network_plugin:
    description: "Path to an optional network plugin binary"

  garden.network_plugin_extra_args:
    description: "An array of additional arguments which will be passed to the network plugin binary"
    default: []

  garden.additional_bpm_volumes:
    description: "An array of shared writable volumes which will be mounted into the BPM container. Submounts from all mount namespaces in a volume are visible in all containers that have the volume mounted in. Note: Can only be used when deploying with BPM to mount in existing volumes."
    default: []

  garden.max_containers:
    description: "Maximum container capacity to advertise. It is not recommended to set this larger than 250."
    default: 250

  garden.cpu_quota_per_share_in_us:
    description: "Maximum number of microseconds each cpu share assigned to a container allows per quota period. When set to zero cpu limit is disabled."
    default: 0

  garden.experimental_cpu_entitlement_per_share_in_percent:
    description: "CPU percentage entitled to a container for a single CPU share. 0 means that the entitlement will be automatically calculated so that the CPU resources get optimally distributed."
    default: 0

  garden.experimental_tcp_mem_limit_in_bytes:
    description: "No longer supported! Previously set a hard limit for the tcp buffer memory in bytes but now not supported in runc."
    default: 0

  garden.disable_swap_limit:
    description: "If true, container is not going to be limited in swap space. Should only be used if swap is disabled on the VM."
    default: false

  garden.destroy_containers_on_start:
    description: "If true, all existing containers will be destroyed any time the garden server starts up"
    default: false

  garden.network_pool:
    description: "A CIDR subnet mask specifying the range of subnets available to be assigned to containers."
    default: "10.254.0.0/22"

  garden.http_proxy:
    description: Http proxy that Garden process should use

  garden.https_proxy:
    description: Https proxy that Garden process should use

  garden.no_proxy:
    description: List of comma-separated hosts that should skip connecting to the proxy

  garden.apparmor_profile:
    description: AppArmor profile to use for unprivileged container processes
    default: garden-default

  # We believe this defaults to false to help concourse: https://github.com/cloudfoundry/garden-runc-release/releases/tag/v1.5.0
  # For diego/cf, this should be set to true
  garden.cleanup_process_dirs_on_wait:
    description: A boolean stating whether or not to cleanup process state after waiting for it. If set a process can be waited for only once.
    default: false

  garden.containerd_mode:
    description: "Use containerd for container lifecycle management. NOTE: cannot be used in combination with bpm"
    default: true

  garden.tcp_keepalive_time:
    description: Sets the `net.ipv4.tcp_keepalive_time` kernel parameter in containers. If not specified, the value from the linux init_net namespace is used.

  garden.tcp_keepalive_intvl:
    description: Sets the `net.ipv4.tcp_keepalive_intvl` kernel parameter in containers. If not specified, the value from the linux init_net namespace is used.

  garden.tcp_keepalive_probes:
    description: Sets the `net.ipv4.tcp_keepalive_probes` kernel parameter in containers. If not specified, the value from the linux init_net namespace is used.

  garden.tcp_retries1:
    description: Sets the `net.ipv4.tcp_retries1` kernel parameter in containers. If not specified, the value from the linux init_net namespace is used.

  garden.tcp_retries2:
    description: Sets the `net.ipv4.tcp_retries2` kernel parameter in containers. If not specified, the value from the linux init_net namespace is used.

  garden.experimental_use_containerd_mode_for_processes:
    description: "(Deprecated) No longer used/tested."
    default: false

  garden.experimental_cpu_throttling:
    description: |
      Deprecated. Will be removed in favor of the non-experimental property.
      Throttle cpu of badly behaving apps. Note this changes the cpu cgroup
      structure, and existing containers should be destroyed when changing this
      value (e.g. set destroy_containers_on_start to true). The non-experimental
      property will override this one if set.
    default: false

  garden.experimental_cpu_throttling_check_interval:
    description: |
      Deprecated. Will be removed in favor of the non-experimental property.
      Number of seconds between each CPU throttling check. The non-experimental
      property will override this one if it is set.
    default: 15

  garden.cpu_throttling:
    description: |
      Throttle cpu of badly behaving apps. Note this changes the cpu cgroup
      structure, and existing containers should be destroyed when changing this
      value (e.g. set destroy_containers_on_start to true).

  garden.cpu_throttling_check_interval:
    description: |
      Number of seconds between each CPU throttling check. If set this will
      override the experimental value.

  garden.iptables_bin_dir:
    description: "Path to directory that contains iptables binary"
    default: /sbin

  grootfs.log_level:
    description: "Log level for grootfs - can be debug, info, error or fatal."
    default: info

  grootfs.dropsonde_port:
    description: "Local metron agent's port."
    default: 3457

  grootfs.insecure_docker_registry_list:
    description: "A list of IP:PORT tuples that we allow pulling docker images from using self-signed certificates."
    default: []

  grootfs.skip_mount:
    description: "Do not mount image root filesystem automatically, just return the mount information."
    default: false

  grootfs.graph_cleanup_threshold_in_mb:
    description: "DEPRECATED in favour of grootfs.reserved_space_for_other_jobs_in_mb."
    default: -1

  grootfs.tls.cert:
    description: "PEM-encoded tls certificate that can be used for client or server auth"

  grootfs.tls.key:
    description: "PEM-encoded tls client key"

  grootfs.tls.ca_cert:
    description: "PEM-encoded tls client CA certificate for asset upload/download"

  grootfs.routine_gc:
    description: "Set to true if you want grootfs to perform garbage collection on unused container image layers whenever a new container is created."
    default: false

  grootfs.reserved_space_for_other_jobs_in_mb:
    description: "Amount of space that will be kept free for other jobs. The GrootFS store will be able to grow up to a maximum size of its disk minus this reserved space. Where the reserved space does not allow sufficient size for GrootFS to store container images and root filesystems (currently 15GB), the limit will be a soft limit, and garbage collection will attempt to keep disk space available for other jobs. -1 disables GC and allows GrootFS to potentially use the whole disk."
    default: 15360

  grootfs.experimental_direct_io:
    description: "Enable the DIRECT_IO flag on the loop device associated with the GrootFS store. This should reduce memory and processing overheads by eliminating double caching of the store filesystem"
    default: false

  bpm.enabled:
    description: |
      Use BPM to run garden.

      This in incompatible with recent stemcells that use systemd. Indeed,
      then only way for sysyemd not to mess up with the garden-managed cgroups
      (whether in containerd mode or not), is to run garden as a systemd
      service with the 'Delegate=yes' property. Bosh-Lite (Warden) stemcells
      are a noticable exception, as these don't use systemd.

      Changing this property requires a recreate when enabling for the first
      time, otherwise old containers may be left running.

      When this property is enabled, containers won't survive a restart of the
      garden job. This is why 'garden.destroy_containers_on_start' should be
      set to 'true' to avoid leaking container state.
    default: false

  logging.format.timestamp:
    description: "Format for timestamp in component logs. Valid values are 'unix-epoch' and 'rfc3339'."
    default: "unix-epoch"
